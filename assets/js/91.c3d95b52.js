(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{496:function(t,r,e){"use strict";e.r(r);var a=e(58),_=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://github.com/stephentian/33-js-concepts#8-%E9%97%AD%E5%8C%85",target:"_blank",rel:"noopener noreferrer"}},[t._v("闭包"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844903606311714824",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解闭包之前置知识 → 作用域与词法作用域"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/3",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入之词法作用域和动态作用域"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844903875456008199",target:"_blank",rel:"noopener noreferrer"}},[t._v("🔥 深入理解 JavaScript, 从作用域与作用域链开始"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/6",target:"_blank",rel:"noopener noreferrer"}},[t._v("🔥 JavaScript 深入之作用域链"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/4",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入之执行上下文栈"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入之变量对象"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844903508337164296#heading-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("内存分析与内存泄漏定位"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"_1-理解词法作用域和动态作用域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解词法作用域和动态作用域"}},[t._v("#")]),t._v(" 1.理解词法作用域和动态作用域")]),t._v(" "),e("h2",{attrs:{id:"_2-理解-javascript-的作用域和作用域链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-理解-javascript-的作用域和作用域链"}},[t._v("#")]),t._v(" 2.理解 JavaScript 的作用域和作用域链")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("作用域")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("全局作用域")]),t._v(" "),e("blockquote",[e("p",[t._v("拥有全局作用域的对象可以在代码的任何地方访问到, 在 js 中一般有以下几种情形拥有全局作用域:")])]),t._v(" "),e("ul",[e("li",[t._v("1 最外层的函数以及最外层变量")]),t._v(" "),e("li",[t._v("2 未定义直接赋值的变量(由于变量提升使之成为全局变量)")])])]),t._v(" "),e("li",[e("p",[t._v("局部作用域")]),t._v(" "),e("blockquote",[e("p",[t._v("和全局作用于相反，局部作用域一般只能在固定代码片段内可以访问到。最常见的就是函数作用域。")])])]),t._v(" "),e("li",[e("p",[t._v("作用域链")]),t._v(" "),e("blockquote",[e("p",[t._v("要到创建这个函数的那个域”。作用域中取值,这里强调的是“创建”，而不是“调用")])])])])])]),t._v(" "),e("h2",{attrs:{id:"_3-理解-javascript-的执行上下文栈-可以应用堆栈信息快速定位问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-理解-javascript-的执行上下文栈-可以应用堆栈信息快速定位问题"}},[t._v("#")]),t._v(" 3.理解 JavaScript 的执行上下文栈，可以应用堆栈信息快速定位问题")]),t._v(" "),e("h2",{attrs:{id:"_4-this-的原理以及几种不同使用场景的取值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-this-的原理以及几种不同使用场景的取值"}},[t._v("#")]),t._v(" 4.this 的原理以及几种不同使用场景的取值")]),t._v(" "),e("ul",[e("li",[t._v("直接函数调用")]),t._v(" "),e("li",[t._v("对象函数调用 指向对象")]),t._v(" "),e("li",[t._v("构造函数调用 指向此实例")]),t._v(" "),e("li",[t._v("间接函数调用 s")])]),t._v(" "),e("h2",{attrs:{id:"_5-闭包的实现原理和作用-可以列举几个开发中闭包的实际应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-闭包的实现原理和作用-可以列举几个开发中闭包的实际应用"}},[t._v("#")]),t._v(" 5.闭包的实现原理和作用，可以列举几个开发中闭包的实际应用")]),t._v(" "),e("blockquote",[e("p",[t._v("红宝书(p178)上对于闭包的定义：闭包是指有权访问另外一个函数作用域中的变量的函数，")])]),t._v(" "),e("blockquote",[e("p",[t._v("MDN 对闭包的定义为：闭包是指那些能够访问自由变量的函数。 （其中自由变量，指在函数中使用的，但既不是函数参数 arguments 也不是函数的局部变量的变量，其实就是另外一个函数作用域中的变量。）")])]),t._v(" "),e("p",[t._v("表现形式")]),t._v(" "),e("ol",[e("li",[t._v("反回一个函数")]),t._v(" "),e("li",[t._v("作为函数参数传递")]),t._v(" "),e("li",[t._v("在定时器、事件监听、Ajax 请求、跨窗口通信、Web Workers 或者任何异步中，只要使用了回调函数，实际上就是在使用闭包")]),t._v(" "),e("li",[t._v("IIFE(立即执行函数表达式)创建闭包, 保存了全局作用域 window 和当前函数的作用域，因此可以全局的变量")])]),t._v(" "),e("h2",{attrs:{id:"_6-理解堆栈溢出和内存泄漏的原理-如何防止"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-理解堆栈溢出和内存泄漏的原理-如何防止"}},[t._v("#")]),t._v(" 6.理解堆栈溢出和内存泄漏的原理，如何防止")]),t._v(" "),e("h2",{attrs:{id:"_7-如何处理循环的异步操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何处理循环的异步操作"}},[t._v("#")]),t._v(" 7.如何处理循环的异步操作")]),t._v(" "),e("h2",{attrs:{id:"_8-理解模块化解决的实际问题-可列举几个模块化方案并理解其中原理。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-理解模块化解决的实际问题-可列举几个模块化方案并理解其中原理。"}},[t._v("#")]),t._v(" 8.理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理。")])])}),[],!1,null,null,null);r.default=_.exports}}]);