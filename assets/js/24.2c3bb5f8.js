(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{430:function(t,s,a){"use strict";a.r(s);var e=a(58),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dfs-深度优先搜索-bfs-广度优先搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dfs-深度优先搜索-bfs-广度优先搜索"}},[t._v("#")]),t._v(" DFS(深度优先搜索) BFS(广度优先搜索)")]),t._v(" "),a("h2",{attrs:{id:"深度优先搜索的本质-栈结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深度优先搜索的本质-栈结构"}},[t._v("#")]),t._v(" 深度优先搜索的本质——栈结构")]),t._v(" "),a("blockquote",[a("p",[t._v("二叉树的先序遍历正是深度优先搜索思想的递归实现")])]),t._v(" "),a("h2",{attrs:{id:"广度优先搜索-层级扫描"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广度优先搜索-层级扫描"}},[t._v("#")]),t._v(" 广度优先搜索 层级扫描")]),t._v(" "),a("blockquote",[a("p",[t._v("看到“层次”关键字，大家应该立刻想到“扫描”；想到“扫描”，就应该立刻想到 BFS。因此层序遍历，我们就用 BFS 的思路来实现")])])])}),[],!1,null,null,null);s.default=r.exports}}]);