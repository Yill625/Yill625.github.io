(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{545:function(t,v,_){"use strict";_.r(v);var a=_(58),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844904127420432391",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大前端进阶 安全》系列 HTTPS详解（通俗易懂）"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"why-https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#why-https"}},[t._v("#")]),t._v(" Why HTTPS")]),t._v(" "),_("p",[t._v("http 明文传输 不安全 所有经过的地方都可能发生劫持")]),t._v(" "),_("h2",{attrs:{id:"https实现原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https实现原理"}},[t._v("#")]),t._v(" HTTPS实现原理")]),t._v(" "),_("p",[t._v("SSL 安全套接层")]),t._v(" "),_("p",[t._v("TLS 传输层安全协议")]),t._v(" "),_("h3",{attrs:{id:"https加解密流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https加解密流程"}},[t._v("#")]),t._v(" HTTPS加解密流程")]),t._v(" "),_("ol",[_("li",[t._v("发起请求 端口443")]),t._v(" "),_("li",[t._v("服务端收到请求，返回配置好的包含"),_("em",[t._v("公钥Pub的证书")]),t._v("给客户端")]),t._v(" "),_("li",[t._v("客户端收到证书，校验合法性")]),t._v(" "),_("li",[t._v("客户端生成一个用于"),_("em",[t._v("对称加密")]),t._v("的随机Key，并用证书内的公钥Pub进行加密，发送给服务端\n"),_("ul",[_("li",[t._v("key 加密")])])]),t._v(" "),_("li",[t._v("服务端收到随机Key的密文，使用与公钥Pub配对的私钥Private进行解密，得到客户端真正想发送的随机Key\n"),_("ul",[_("li",[t._v("解密 得到 key")])])]),t._v(" "),_("li",[t._v("服务端用key进行加密内容 将密文返回客户端")]),t._v(" "),_("li",[t._v("客户端使用随机Key"),_("em",[t._v("对称解密")]),t._v("密文，得到HTTP数据明文")]),t._v(" "),_("li",[t._v("后续HTTPS请求使用之前交换好的随机Key进行对称加解密")])]),t._v(" "),_("h3",{attrs:{id:"对称加密与非对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密与非对称加密"}},[t._v("#")]),t._v(" 对称加密与非对称加密")]),t._v(" "),_("p",[t._v("非对称加解密耗时要远大于对称加解密")]),t._v(" "),_("p",[t._v("非对称加密 加密解密 一个 对称加密的 key")]),t._v(" "),_("h3",{attrs:{id:"ca颁发机构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ca颁发机构"}},[t._v("#")]),t._v(" CA颁发机构")]),t._v(" "),_("blockquote",[_("p",[t._v("客户端无法确认收到的公钥是不是真的是服务端发来的")])]),t._v(" "),_("h4",{attrs:{id:"私钥数字签名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#私钥数字签名"}},[t._v("#")]),t._v(" 私钥数字签名")]),t._v(" "),_("p",[t._v("防止公钥被篡改")]),t._v(" "),_("ul",[_("li",[t._v("CA机构拥有自己的一对公钥和私钥")]),t._v(" "),_("li",[t._v("CA机构在颁发证书时对证书明文信息进行哈希")]),t._v(" "),_("li",[t._v("将哈希值用私钥进行加签，得到数字签名")])]),t._v(" "),_("p",[t._v("验证")]),t._v(" "),_("ul",[_("li",[t._v("客户端得到证书，分解成明文部分Text和数字签名Sig1")]),t._v(" "),_("li",[t._v("用CA机构的公钥进行解签，得到Sig2（由于CA机构是一种公信身份，因此在系统或浏览器中会内置CA机构的证书和公钥信息）")]),t._v(" "),_("li",[t._v("用证书里声明的哈希算法对明文Text部分进行哈希得到T")]),t._v(" "),_("li",[t._v("当自己计算得到的哈希值H与解签后的Sig2相等，表示证书可信，没有被篡改")])])])}),[],!1,null,null,null);v.default=e.exports}}]);