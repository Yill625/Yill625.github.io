(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{471:function(t,a,e){"use strict";e.r(a);var r=e(58),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-react-和-vue-选型和优缺点、核心架构的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-react-和-vue-选型和优缺点、核心架构的区别"}},[t._v("#")]),t._v(" 1.React 和 vue 选型和优缺点、核心架构的区别")]),t._v(" "),e("h2",{attrs:{id:"_2-react-中-setstate-的执行机制-如何有效的管理状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-中-setstate-的执行机制-如何有效的管理状态"}},[t._v("#")]),t._v(" 2.React 中 setState 的执行机制，如何有效的管理状态")]),t._v(" "),e("h2",{attrs:{id:"_3-react-的事件底层实现机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-react-的事件底层实现机制"}},[t._v("#")]),t._v(" 3.React 的事件底层实现机制")]),t._v(" "),e("h2",{attrs:{id:"_4-react-的虚拟-dom-和-diff-算法的内部实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-react-的虚拟-dom-和-diff-算法的内部实现"}},[t._v("#")]),t._v(" 4.React 的虚拟 DOM 和 Diff 算法的内部实现")]),t._v(" "),e("h2",{attrs:{id:"_5-react-的-fiber-工作原理-解决了什么问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-react-的-fiber-工作原理-解决了什么问题"}},[t._v("#")]),t._v(" 5.React 的 Fiber 工作原理，解决了什么问题")]),t._v(" "),e("h2",{attrs:{id:"_6-react-router-和-vue-router-的底层实现原理、动态加载实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-react-router-和-vue-router-的底层实现原理、动态加载实现原理"}},[t._v("#")]),t._v(" 6.React Router 和 Vue Router 的底层实现原理、动态加载实现原理")]),t._v(" "),e("h2",{attrs:{id:"_7-可熟练应用-react-api、生命周期等-可应用-hoc、render-props、hooks-等高阶用法解决问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-可熟练应用-react-api、生命周期等-可应用-hoc、render-props、hooks-等高阶用法解决问题"}},[t._v("#")]),t._v(" 7.可熟练应用 React API、生命周期等，可应用 HOC、render props、Hooks 等高阶用法解决问题")]),t._v(" "),e("h2",{attrs:{id:"_8-基于-react-的特性和原理-可以手动实现一个简单的-react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-基于-react-的特性和原理-可以手动实现一个简单的-react"}},[t._v("#")]),t._v(" 8.基于 React 的特性和原理，可以手动实现一个简单的 React")])])}),[],!1,null,null,null);a.default=s.exports}}]);