(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{539:function(t,a,r){"use strict";r.r(a);var s=r(58),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"模块化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000017466120",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端模块化详解(完整版)"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://segmentfault.com/a/1190000012419990",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 模块规范：AMD、UMD、CMD、commonJS、ES6 module"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"什么是模块化-解决了什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是模块化-解决了什么问题"}},[t._v("#")]),t._v(" 什么是模块化？解决了什么问题？")]),t._v(" "),r("ol",[r("li",[t._v("文件隔离")]),t._v(" "),r("li",[t._v("暴露变量与函数")])]),t._v(" "),r("h2",{attrs:{id:"早期办法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#早期办法"}},[t._v("#")]),t._v(" 早期办法")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("全局 function")]),t._v(" "),r("ul",[r("li",[t._v("看不出关联依赖 污染全局")])])]),t._v(" "),r("li",[r("p",[t._v("对象模式 定义一个变量 导出这个对象的变量与方法")]),t._v(" "),r("ul",[r("li",[t._v("作用: 减少了全局变量，解决命名冲突 问题: 数据不安全(外部可以直接修改模块内部的数据)")])])]),t._v(" "),r("li",[r("p",[t._v("IIFE 模式：匿名函数自调用(闭包)")])]),t._v(" "),r("li",[r("p",[t._v("IIFE 模式增强 : 引入依赖")])])]),t._v(" "),r("h2",{attrs:{id:"模块化的规范"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化的规范"}},[t._v("#")]),t._v(" 模块化的规范")]),t._v(" "),r("h3",{attrs:{id:"commonjs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("在服务器端，模块的加载是运行时同步加载的；在浏览器端，模块需要提前编译打包处理。")])]),t._v(" "),r("li",[r("p",[t._v("加载某个模块，其实是加载该模块的 module.exports 属性")])]),t._v(" "),r("li",[r("p",[t._v("require 命令的基本功能是，读入并执行一个 JavaScript 文件，然后返回该模块的 "),r("strong",[t._v("exports")]),t._v(" 对象。如果没有发现指定模块，会报错。")])]),t._v(" "),r("li",[r("p",[t._v("CommonJS 模块的加载机制是，输入的是被输出的值的拷贝。也就是说，一旦输出一个值，模块内部的变化就影响不到这个值")])])]),t._v(" "),r("h3",{attrs:{id:"amd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[t._v("#")]),t._v(" AMD")]),t._v(" "),r("p",[t._v("如果是浏览器环境，要从服务器端加载模块，这时就必须采用非同步模式，因此浏览器端一般采用 AMD 规范")]),t._v(" "),r("p",[t._v("定义及使用引入 require.js")]),t._v(" "),r("p",[r("code",[t._v('<script data-main="js/main" src="js/libs/require.js"><\/script>')])]),t._v(" "),r("h3",{attrs:{id:"cmd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" CMD")]),t._v(" "),r("p",[t._v("CMD 规范专门用于浏览器端")]),t._v(" "),r("p",[t._v("sea.js")]),t._v(" "),r("h3",{attrs:{id:"umd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#umd"}},[t._v("#")]),t._v(" UMD")]),t._v(" "),r("p",[t._v("兼容 AMD 和 commonJS 规范的同时，还兼容全局引用的方式")]),t._v(" "),r("h3",{attrs:{id:"es6-模块化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块化"}},[t._v("#")]),t._v(" ES6 模块化")]),t._v(" "),r("h4",{attrs:{id:"es6-模块与-commonjs-模块的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块与-commonjs-模块的差异"}},[t._v("#")]),t._v(" ES6 模块与 CommonJS 模块的差异")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")])]),t._v(" "),r("li",[r("p",[t._v("CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);