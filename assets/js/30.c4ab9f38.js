(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{437:function(e,t,r){"use strict";r.r(t);var o=r(58),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[e._v("#")]),e._v(" 链表")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/merge-two-sorted-lists/",target:"_blank",rel:"noopener noreferrer"}},[e._v("合并两个有序链表"),r("OutboundLink")],1)]),e._v(" "),r("ol",[r("li",[e._v("dummy 结点的使用")]),e._v(" "),r("li",[e._v("链表的循环需要一个指针 直接指向链表")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/merge-k-sorted-lists/",target:"_blank",rel:"noopener noreferrer"}},[e._v("🙅🏻‍♀️ 合并 K 个升序链表"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("用到 "),r("a",{attrs:{href:"https://labuladong.gitee.io/algo/2/22/63/",target:"_blank",rel:"noopener noreferrer"}},[e._v("优先级队列（二叉堆）"),r("OutboundLink")],1),e._v(" 这种数据结构，把链表节点放入一个最小堆，就可以每次获得 k 个节点中的最小节点")])]),e._v(" "),r("h2",{attrs:{id:"优先级队列-二叉堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优先级队列-二叉堆"}},[e._v("#")]),e._v(" 优先级队列（二叉堆）")]),e._v(" "),r("p",[e._v("二叉堆因为是一颗完全二叉树 随意可以根据每个数组的索引为根节点 找到对应的左右子节点索引")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("19. 删除链表的倒数第 N 个结点"),r("OutboundLink")],1)]),e._v(" "),r("ol",[r("li",[e._v("双指针")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/middle-of-the-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("876. 链表的中间结点"),r("OutboundLink")],1)]),e._v(" "),r("ol",[r("li",[e._v("快慢指针")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("141. 环形链表"),r("OutboundLink")],1)]),e._v(" "),r("ol",[r("li",[r("p",[e._v("flag 法")])]),e._v(" "),r("li",[r("p",[e._v("快慢指针 快的指针多走一步")])])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("环形链表 II"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("计算起点")])]),e._v(" "),r("ol",[r("li",[e._v("快慢指针")]),e._v(" "),r("li",[e._v("找到慢指针结点")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/",target:"_blank",rel:"noopener noreferrer"}},[e._v("160. 相交链表"),r("OutboundLink")],1)]),e._v(" "),r("ol",[r("li",[e._v("合并 2 条链表")])])])}),[],!1,null,null,null);t.default=n.exports}}]);